# Docker compose file format 3.7 Required Docker Engine 18.06.0+
# For more information see: https://docs.docker.com/compose/compose-file/compose-versioning/
version: '3.7'

services:

  # Confluent Kafka Docker image see: https://hub.docker.com/r/confluentinc/cp-kafka/
  # Confluent Platform and Apache Kafka Compatibility:
  # https://docs.confluent.io/current/installation/versions-interoperability.html
  # Confluent Platform: 5.5.x = Apache Kafka: 2.5.x
  kafka:
    image: confluentinc/cp-kafka:5.5.0
    container_name: kafka
    hostname: kafka
    # Just in case Zookeeper isn't up yet restart
    restart: always
    environment:
      # KAFKA_ADVERTISED_LISTENERS: comma-separated list of listeners with their the host/ip and port.
      # This is the metadata that’s passed back to clients.
      # LISTENER_DOCKER_INTERNAL: This will make Kafka accessible from outside of the Docker network (your machine) port: 9092.
      # LISTENER_DOCKER_EXTERNAL: This will make Kafka accessible to other Docker containers by advertising it’s
      # location on the Docker network port: 29092
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://:29092,LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:29092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      # Key/value pairs for the security protocol to use, per listener name
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      # The same ZooKeeper port is specified here as the previous container.
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      # The KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR is set to 1 for a single-node cluster. Unless you have three or more
      # nodes you do not need to change this from the default.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 3
      # Whether or not to auto create topics when data is published for the first time to a topic
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      JMX_PORT: 9999
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=9999
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    ports:
      - 9092:9092
      - 9999:9999
    depends_on:
      - zookeeper

  # Confluent Zookeeper Docker image see: https://hub.docker.com/r/confluentinc/cp-zookeeper/
  zookeeper:
    container_name: zookeeper
    hostname: zookeeper
    image: confluentinc/cp-zookeeper:5.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181

  # Confluent Schema Registry Docker image see: https://hub.docker.com/r/confluentinc/cp-schema-registry
  # Schema Registry: http://localhost:8081
  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.0
    hostname: schema-registry
    container_name: schema-registry
    restart: always
    environment:
      # Connects to the docker internal network port: 29092
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka:29092"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    ports:
      - 8081:8081
    depends_on:
      - zookeeper

  # https://hub.docker.com/r/hlebalbau/kafka-manager/
  # Kafka Manager: http://localhost:9000
  kafka-manager:
    container_name: kafka-manager
    image: hlebalbau/kafka-manager
    environment:
      ZK_HOSTS: "zookeeper:2181"
    ports:
      - 9000:9000
    depends_on:
      - zookeeper

  # Confluent Kafka cat (command line tool for interacting with Kafka brokers)
  # Docker image see: https://hub.docker.com/r/confluentinc/cp-kafkacat/
  kafkacat:
    container_name: kafkacat
    image: confluentinc/cp-kafkacat:5.5.0
    command: sleep infinity